apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "hackmd.fullname" . }}
  labels:
    app: {{ template "hackmd.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "hackmd.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          args:
            - "/bin/bash"
            - "-c"
            - "dockerize -wait tcp://{{ template "postgresql.fullname" . }}:5432 -timeout 30s /hackmd/docker-entrypoint.sh"
          livenessProbe:
            httpGet:
              path: /status
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: 120
          readinessProbe:
            httpGet:
              path: /status
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: 30
          env:
            - name: HMD_DB_URL
              value: postgres://{{ .Values.postgresql.postgresUser }}:{{ .Values.postgresql.postgresPassword }}@{{ template "postgresql.fullname" . }}:5432/{{ .Values.postgresql.postgresDatabase }}
            {{- range $key, $value :=  .Values.env }}
            - name: {{ $key | upper | replace "-" "_" }}
              value: {{ $value | quote }}
            {{- end }}
          volumeMounts:
            - name: config
              subPath: config.json
              mountPath: /hackmd/config.json
            - name: config
              subPath: .sequelizerc
              mountPath: /hackmd/.sequelizerc
            - name: data
              mountPath: "/hackmd/public/uploads"
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ template "hackmd.fullname" . }}
        - name: data
        {{- if .Values.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistentVolume.existingClaim }}{{ .Values.persistentVolume.existingClaim }}{{- else }}{{ template "hackmd.fullname" . }}{{- end }}
        {{- else }}
          emptyDir: {}
        {{- end -}}
